plugins {
  id 'org.springframework.boot' version '2.7.1'
  id 'com.coral.tools' version '3.0-SNAPSHOT'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.entian.oxygen'


def nexusRepo = System.getenv('NEXUS_HOST') ?: 'https://nexus-vie.coral.co.uk/repository/maven-public/'
def nexusUser = project.properties.nexusUser ?: System.getenv('NEXUS_USER')
def nexusPass = project.properties.nexusPass ?: System.getenv('NEXUS_PASS')

repositories {
  maven {
    credentials {
      username = nexusUser
      password = nexusPass
    }
    url nexusRepo
  }
  mavenCentral()
}

configurations {
  all {
    // exclude module: 'joda-time'
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
}

ext {
  set('springCloudVersion', '2021.0.3')
}

dependencies {

  // Development
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  compileOnly 'com.hp.fortify:fortifyAnnotations:4.30'

  // Spring Cloud
  implementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter-logging'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.2.2'
  // Spring - Kafka
  implementation 'org.springframework.kafka:spring-kafka'

  implementation 'com.coral:bpp-api:release-154.0.0'
  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'com.ladbrokescoral.lib:master-slave-lock-starter:1.3'
  //log4j
  implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
  implementation 'org.apache.logging.log4j:log4j-jul:2.22.1'
  implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.22.1'

  // Testing
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  // Required for MockMvc autoconfigure
  testImplementation 'org.springframework.boot:spring-boot-starter-web'

}

jacocoTestReport.reports.xml.required = true

test {
  systemProperty 'spring.profiles.active', 'UNIT'
  useJUnitPlatform()
}

jar{
  enabled=false
}

springBoot {
  buildInfo()
}

bootBuildImage {
  imageName = "${rootProject.name}"
}

jar {
  enabled = false
}

sonarqube {
  properties {
    property  'sonar.coverage.exclusions', "**/configuration/*"
  }
}
