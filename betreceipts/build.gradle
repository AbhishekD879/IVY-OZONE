plugins {
  id 'org.springframework.boot' version '2.7.1'
  id 'com.coral.tools' version '3.0-SNAPSHOT'
}

apply plugin: "io.spring.dependency-management"

group = 'com.gvc.oxygen'

//java {
//  toolchain {
//    languageVersion = JavaLanguageVersion.of(8)
//  }
//}

def nexusMavenRepo = System.getenv("NEXUS_HOST") ?: 'https://nexus-vie.coral.co.uk/repository/maven-public/'
ext.nexusUser = System.getenv("NEXUS_USER") ?: project.properties.nexusUser
ext.nexusPass = System.getenv("NEXUS_PASS") ?: project.properties.nexusPass

repositories {
  maven {
    credentials {
      username = "${nexusUser}"
      password = "${nexusPass}"
    }
    url nexusMavenRepo
  }
  jcenter()
}

configurations {
  all {
    exclude module: 'spring-boot-starter-tomcat'
    exclude module: 'spring-boot-starter-logging'
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
}

ext {
  set('springCloudVersion', '2021.0.3')
}

dependencies {

  //Development only
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  // Fortify Annotations manual https://drive.google.com/open?id=15SbZt-C937-CnBNs6-zIH-Wy8T_KAFNZ
  compileOnly 'com.hp.fortify:fortifyAnnotations:4.30'

  // Logging
  implementation 'org.springframework.boot:spring-boot-starter-log4j2'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml' // log4j
  implementation 'com.lmax:disruptor:3.4.2'

  // Spring Cloud
  implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  // implementation 'org.springframework.cloud:spring-cloud-starter-config'

  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-undertow'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  // Spring - Swagger
  implementation "org.springdoc:springdoc-openapi-ui:1.5.12"

  // Project Libs
  implementation 'com.egalacoral.spark:siteserver-api:release-154.0.0-jdk-17'
  implementation 'com.egalacoral.spark:df-api:1.5'
  implementation 'com.coral:bpp-api:release-144.1.0'
  implementation('com.egalacoral.spark:liveserv-api:1.7') {
    changing = true
    exclude(module: 'siteserver-api')
  }
  implementation 'com.ladbrokescoral.lib:master-slave-lock-starter:1.3'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5'
  implementation 'com.google.guava:guava:30.1.1-jre'

  implementation 'io.github.classgraph:classgraph:4.8.149'
  // Tools
  implementation 'org.modelmapper:modelmapper:2.3.8'

  // Testing
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.0'
}

jacocoTestReport.reports.xml.enabled = true

test {
  systemProperty 'spring.profiles.active', 'UNIT'
  useJUnitPlatform()
}

springBoot {
  buildInfo()
}

bootBuildImage {
  imageName = "${rootProject.name}"
}

sonarqube {
  properties {
    property  'sonar.coverage.exclusions', "**/config/*"
  }
}
jar {
  enabled = false
}
