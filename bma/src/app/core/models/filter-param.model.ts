export interface IFilterParam {
  suspendAtTime?: string;
  eventStatusCode?: string;
  outcomeStatusCode?: string;
  marketStatusCodeExists?: string;
  marketStatusCode?: string;
  typeId?: string | string[];
  isRacing?: boolean;
  isActive?: boolean;
  date?: string;
  typeHasOpenEvent?: boolean;
  hasOpenEvent?: string;
  templateMarketNameOnlyEquals?: string;
  templateMarketNameNotEquals?: string;
  siteChannels?: string;
  sportId?: any;
  externalKeysEvent?: boolean;
  excludeUnnamedFavourites?: boolean;
  marketName?: string;
  limitOutcomesCount?: number;
  priceHistory?: boolean;
  priceTypeCodes?: string;
  priceTypeCodesExists?: string;
  racingFormEvent?: boolean;
  racingFormOutcome?: boolean;
  scorecast?: boolean;
  startTime?: string;
  endTime?: string;
  typeFlagCodes?: string;
  resultedDrawFrom?: string;
  resultedDrawTo?: string;
  eventsCount?: any;
  siteServerEventsCount?: any;
  resultedPriceTypeCodeToDisplay?: any;
  categoryId?: any;
  couponId?: any;
  marketsCount?: any;
  childCount?: boolean;
  marketIds?: any;
  includeRestricted?: boolean;
  includeUndisplayed?: boolean;
  isRawIsOffCodeNotY?: boolean;
  isNotStarted?: boolean;
  marketTemplateMarketNameIntersects?: string;
  isVirtualRacesEnabled?: boolean;
  virtualRacesIncluded?: string[];
}
