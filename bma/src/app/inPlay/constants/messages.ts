/**
 * Inplay microsrvice Websocket messages to subscribe for data updates
 */
export const SUBSCRIBE_MESSAGES = {
  SUBSCRIBE: 'subscribe',
  UNSUBSCRIBE: 'unsubscribe',
  RIBBON_CHANGE: 'IN_PLAY_SPORTS_RIBBON_CHANGED',
  STRUCTURE_CHANGE: 'IN_PLAY_STRUCTURE_CHANGED',
  LS_STRUCTURE_CHANGE: 'IN_PLAY_LS_STRUCTURE_CHANGED',
  COMPETITION_CHANGE: 'IN_PLAY_SPORT_COMPETITION_CHANGED',
  VIRTUALS_CHANGE: 'GET_VIRTUAL_SPORTS_RIBBON',
  VIRTUALS_RESPONSE_CHANGE: 'GET_VIRTUAL_SPORTS_RIBBON_RESPONSE'
};

/**
 * Inplay microsrvice Websocket messages to get Data from it.
 */
export const GET_DATA_MESSAGES = {
  RIBBON: {
    REQUEST_MESSAGE: 'GET_RIBBON',
    RESPONSE_MESSAGE: 'INPLAY_SPORTS_RIBBON'
  },
  STRUCTURE: {
    REQUEST_MESSAGE: 'GET_INPLAY_STRUCTURE',
    RESPONSE_MESSAGE: 'INPLAY_STRUCTURE'
  },
  LS_STRUCTURE: {
    REQUEST_MESSAGE: 'GET_INPLAY_LS_STRUCTURE',
    RESPONSE_MESSAGE: 'INPLAY_LS_STRUCTURE'
  },
  SPORT: {
    REQUEST_MESSAGE: 'GET_SPORT',
    RESPONSE_MESSAGE: 'IN_PLAY_SPORTS'
  },
  COMPETITION: {
    REQUEST_MESSAGE: 'GET_TYPE',
    RESPONSE_MESSAGE: 'IN_PLAY_SPORT_TYPE'
  },
  VIRTUALS: {
    REQUEST_MESSAGE: 'GET_VIRTUAL_SPORTS_RIBBON',
    RESPONSE_MESSAGE: 'GET_VIRTUAL_SPORTS_RIBBON_RESPONSE'
  }
};
