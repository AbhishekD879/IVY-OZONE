spring.redis.host=localhost
spring.redis.port=6380

spring.kafka.consumer.group-id=oxygen
openbet.cashout.url=https://backoffice-tst2.coral.co.uk/cashout_service/getcashoutoffer

spring.kafka.bootstrap-servers=com.feed.datafabric.nonprod.aws.ladbrokescoral.com:9092
spring.kafka.consumer.ssl.key-store-location=classpath:/ssl/nonprod/oxygen.keystore.jks
spring.kafka.consumer.ssl.trust-store-location=classpath:/ssl/nonprod/oxygen.truststore.jks

spring.kafka.consumer.ssl.key-store-password=coralAdminPass1
spring.kafka.consumer.ssl.key-password=coralAdminPass1
spring.kafka.consumer.ssl.trust-store-password=coralAdminPass1

app.kafka.topic=coral.stage.retail.betslip.1,ladbrokes.stage.retail.betslip.1

app.scheduling.enable=false

internal.topics.bet-detail-requests.partitions=1
internal.topics.bet-detail-requests.replica=1
internal.topics.bet-updates.partitions=1
internal.topics.bet-updates.replica=1
internal.topics.bet-updates-errors.partitions=1
internal.topics.bet-updates-errors.replica=1
internal.topics.cashout-offer-requests.partitions=1
internal.topics.cashout-offer-requests.replica=1

internal.listenersConcurrency=10

internal.kafka.bootstrap-servers=localhost:3333
internal.kafka.admin.properties.bootstrap.servers=${internal.kafka.bootstrap-servers}
internal.kafka.consumer.bootstrap-servers=${internal.kafka.bootstrap-servers}
internal.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
internal.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
internal.kafka.consumer.auto-offset-reset=latest

internal.kafka.producer.bootstrap-servers=${internal.kafka.bootstrap-servers}
internal.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
internal.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

internal.kafka.consumer.properties.spring.json.trusted.packages=*

cashoutOffer.buffering.maxTime=100ms
cashoutOffer.buffering.windowTime=100ms
cashoutOffer.buffering.maxSize=1

betDetail.buffering=100ms
betDetail.requests.consumer-group=${random.uuid}

payout.base.url=https://obbackoffice-tst2.gib1.egalacoral.com/payout/potentialPayout
payout.retry.number=2
payout.retry.timeout=100

internal.topics.payout-offer-requests.partitions=12
internal.topics.payout-offer-requests.replica=2
internal.topics.payout-updates.partitions=12
internal.topics.payout-updates.replica=2
internal.topics.event-updates.partitions=12
internal.topics.event-updates.replica=2
internal.topics.twoup_updates.partitions=12
internal.topics.twoup_updates.replica=1

payout-offer-requests.consumer-group=${spring.profiles.active}
payout-offer-requests.concurrency=1

payout-updates.consumer-group=payout-updates
payout-updates.consumer.concurrency=${internal.topics.payout-updates.partitions}

event-updates.consumer-group=event-updates
event-updates.consumer.concurrency=${internal.topics.event-updates.partitions}

twoup_updates.consumer-group=twoup_updates
twoup_updates.consumer.concurrency=${internal.topics.twoup_updates.partitions}
