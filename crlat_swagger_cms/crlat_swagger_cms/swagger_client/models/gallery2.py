# coding: utf-8

"""
    Oxygen CMS REST API

    CMS Private API (Used by CMS UI)   # noqa: E501

    OpenAPI spec version: 82.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class Gallery2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'key': 'str',
        'name': 'str',
        'images': 'list[UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename]',
        'published_date': 'str'
    }

    attribute_map = {
        'id': 'id',
        'key': 'key',
        'name': 'name',
        'images': 'images',
        'published_date': 'publishedDate'
    }

    def __init__(self, id=None, key=None, name=None, images=None, published_date=None):  # noqa: E501
        """Gallery2 - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._key = None
        self._name = None
        self._images = None
        self._published_date = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if key is not None:
            self.key = key
        if name is not None:
            self.name = name
        if images is not None:
            self.images = images
        if published_date is not None:
            self.published_date = published_date

    @property
    def id(self):
        """Gets the id of this Gallery2.  # noqa: E501


        :return: The id of this Gallery2.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Gallery2.


        :param id: The id of this Gallery2.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this Gallery2.  # noqa: E501


        :return: The key of this Gallery2.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Gallery2.


        :param key: The key of this Gallery2.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this Gallery2.  # noqa: E501


        :return: The name of this Gallery2.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Gallery2.


        :param name: The name of this Gallery2.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def images(self):
        """Gets the images of this Gallery2.  # noqa: E501


        :return: The images of this Gallery2.  # noqa: E501
        :rtype: list[UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this Gallery2.


        :param images: The images of this Gallery2.  # noqa: E501
        :type: list[UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename]
        """

        self._images = images

    @property
    def published_date(self):
        """Gets the published_date of this Gallery2.  # noqa: E501


        :return: The published_date of this Gallery2.  # noqa: E501
        :rtype: str
        """
        return self._published_date

    @published_date.setter
    def published_date(self, published_date):
        """Sets the published_date of this Gallery2.


        :param published_date: The published_date of this Gallery2.  # noqa: E501
        :type: str
        """

        self._published_date = published_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Gallery2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Gallery2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
