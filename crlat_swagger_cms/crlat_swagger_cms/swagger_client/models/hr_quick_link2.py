# coding: utf-8

"""
    Oxygen CMS REST API

    CMS Private API (Used by CMS UI)   # noqa: E501

    OpenAPI spec version: 82.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class HRQuickLink2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'body': 'str',
        'brand': 'str',
        'disabled': 'bool',
        'filename': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename',
        'height_medium': 'float',
        'lang': 'str',
        'link_type': 'str',
        'race_type': 'str',
        'sort_order': 'float',
        'target': 'str',
        'title': 'str',
        'uri_medium': 'str',
        'validity_period_end': 'str',
        'validity_period_start': 'str',
        'width_medium': 'float'
    }

    attribute_map = {
        'id': 'id',
        'body': 'body',
        'brand': 'brand',
        'disabled': 'disabled',
        'filename': 'filename',
        'height_medium': 'heightMedium',
        'lang': 'lang',
        'link_type': 'linkType',
        'race_type': 'raceType',
        'sort_order': 'sortOrder',
        'target': 'target',
        'title': 'title',
        'uri_medium': 'uriMedium',
        'validity_period_end': 'validityPeriodEnd',
        'validity_period_start': 'validityPeriodStart',
        'width_medium': 'widthMedium'
    }

    def __init__(self, id=None, body=None, brand=None, disabled=None, filename=None, height_medium=None, lang=None, link_type=None, race_type=None, sort_order=None, target=None, title=None, uri_medium=None, validity_period_end=None, validity_period_start=None, width_medium=None):  # noqa: E501
        """HRQuickLink2 - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._body = None
        self._brand = None
        self._disabled = None
        self._filename = None
        self._height_medium = None
        self._lang = None
        self._link_type = None
        self._race_type = None
        self._sort_order = None
        self._target = None
        self._title = None
        self._uri_medium = None
        self._validity_period_end = None
        self._validity_period_start = None
        self._width_medium = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if body is not None:
            self.body = body
        if brand is not None:
            self.brand = brand
        if disabled is not None:
            self.disabled = disabled
        if filename is not None:
            self.filename = filename
        if height_medium is not None:
            self.height_medium = height_medium
        if lang is not None:
            self.lang = lang
        if link_type is not None:
            self.link_type = link_type
        if race_type is not None:
            self.race_type = race_type
        if sort_order is not None:
            self.sort_order = sort_order
        if target is not None:
            self.target = target
        if title is not None:
            self.title = title
        if uri_medium is not None:
            self.uri_medium = uri_medium
        if validity_period_end is not None:
            self.validity_period_end = validity_period_end
        if validity_period_start is not None:
            self.validity_period_start = validity_period_start
        if width_medium is not None:
            self.width_medium = width_medium

    @property
    def id(self):
        """Gets the id of this HRQuickLink2.  # noqa: E501


        :return: The id of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HRQuickLink2.


        :param id: The id of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def body(self):
        """Gets the body of this HRQuickLink2.  # noqa: E501


        :return: The body of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this HRQuickLink2.


        :param body: The body of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._body = body

    @property
    def brand(self):
        """Gets the brand of this HRQuickLink2.  # noqa: E501


        :return: The brand of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this HRQuickLink2.


        :param brand: The brand of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._brand = brand

    @property
    def disabled(self):
        """Gets the disabled of this HRQuickLink2.  # noqa: E501


        :return: The disabled of this HRQuickLink2.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this HRQuickLink2.


        :param disabled: The disabled of this HRQuickLink2.  # noqa: E501
        :type: bool
        """

        self._disabled = disabled

    @property
    def filename(self):
        """Gets the filename of this HRQuickLink2.  # noqa: E501


        :return: The filename of this HRQuickLink2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this HRQuickLink2.


        :param filename: The filename of this HRQuickLink2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """

        self._filename = filename

    @property
    def height_medium(self):
        """Gets the height_medium of this HRQuickLink2.  # noqa: E501


        :return: The height_medium of this HRQuickLink2.  # noqa: E501
        :rtype: float
        """
        return self._height_medium

    @height_medium.setter
    def height_medium(self, height_medium):
        """Sets the height_medium of this HRQuickLink2.


        :param height_medium: The height_medium of this HRQuickLink2.  # noqa: E501
        :type: float
        """

        self._height_medium = height_medium

    @property
    def lang(self):
        """Gets the lang of this HRQuickLink2.  # noqa: E501


        :return: The lang of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this HRQuickLink2.


        :param lang: The lang of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._lang = lang

    @property
    def link_type(self):
        """Gets the link_type of this HRQuickLink2.  # noqa: E501


        :return: The link_type of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._link_type

    @link_type.setter
    def link_type(self, link_type):
        """Sets the link_type of this HRQuickLink2.


        :param link_type: The link_type of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._link_type = link_type

    @property
    def race_type(self):
        """Gets the race_type of this HRQuickLink2.  # noqa: E501


        :return: The race_type of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._race_type

    @race_type.setter
    def race_type(self, race_type):
        """Sets the race_type of this HRQuickLink2.


        :param race_type: The race_type of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._race_type = race_type

    @property
    def sort_order(self):
        """Gets the sort_order of this HRQuickLink2.  # noqa: E501


        :return: The sort_order of this HRQuickLink2.  # noqa: E501
        :rtype: float
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this HRQuickLink2.


        :param sort_order: The sort_order of this HRQuickLink2.  # noqa: E501
        :type: float
        """

        self._sort_order = sort_order

    @property
    def target(self):
        """Gets the target of this HRQuickLink2.  # noqa: E501


        :return: The target of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this HRQuickLink2.


        :param target: The target of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._target = target

    @property
    def title(self):
        """Gets the title of this HRQuickLink2.  # noqa: E501


        :return: The title of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this HRQuickLink2.


        :param title: The title of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def uri_medium(self):
        """Gets the uri_medium of this HRQuickLink2.  # noqa: E501


        :return: The uri_medium of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._uri_medium

    @uri_medium.setter
    def uri_medium(self, uri_medium):
        """Sets the uri_medium of this HRQuickLink2.


        :param uri_medium: The uri_medium of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._uri_medium = uri_medium

    @property
    def validity_period_end(self):
        """Gets the validity_period_end of this HRQuickLink2.  # noqa: E501


        :return: The validity_period_end of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._validity_period_end

    @validity_period_end.setter
    def validity_period_end(self, validity_period_end):
        """Sets the validity_period_end of this HRQuickLink2.


        :param validity_period_end: The validity_period_end of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._validity_period_end = validity_period_end

    @property
    def validity_period_start(self):
        """Gets the validity_period_start of this HRQuickLink2.  # noqa: E501


        :return: The validity_period_start of this HRQuickLink2.  # noqa: E501
        :rtype: str
        """
        return self._validity_period_start

    @validity_period_start.setter
    def validity_period_start(self, validity_period_start):
        """Sets the validity_period_start of this HRQuickLink2.


        :param validity_period_start: The validity_period_start of this HRQuickLink2.  # noqa: E501
        :type: str
        """

        self._validity_period_start = validity_period_start

    @property
    def width_medium(self):
        """Gets the width_medium of this HRQuickLink2.  # noqa: E501


        :return: The width_medium of this HRQuickLink2.  # noqa: E501
        :rtype: float
        """
        return self._width_medium

    @width_medium.setter
    def width_medium(self, width_medium):
        """Sets the width_medium of this HRQuickLink2.


        :param width_medium: The width_medium of this HRQuickLink2.  # noqa: E501
        :type: float
        """

        self._width_medium = width_medium

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HRQuickLink2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HRQuickLink2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
