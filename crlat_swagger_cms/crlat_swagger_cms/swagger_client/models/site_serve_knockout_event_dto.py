# coding: utf-8

"""
    Oxygen CMS REST API

    CMS Private API (Used by CMS UI)   # noqa: E501

    OpenAPI spec version: 82.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class SiteServeKnockoutEventDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'float',
        'home_team': 'str',
        'away_team': 'str',
        'event_name': 'str',
        'start_time': 'str'
    }

    attribute_map = {
        'id': 'id',
        'home_team': 'homeTeam',
        'away_team': 'awayTeam',
        'event_name': 'eventName',
        'start_time': 'startTime'
    }

    def __init__(self, id=None, home_team=None, away_team=None, event_name=None, start_time=None):  # noqa: E501
        """SiteServeKnockoutEventDto - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._home_team = None
        self._away_team = None
        self._event_name = None
        self._start_time = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if home_team is not None:
            self.home_team = home_team
        if away_team is not None:
            self.away_team = away_team
        if event_name is not None:
            self.event_name = event_name
        if start_time is not None:
            self.start_time = start_time

    @property
    def id(self):
        """Gets the id of this SiteServeKnockoutEventDto.  # noqa: E501


        :return: The id of this SiteServeKnockoutEventDto.  # noqa: E501
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SiteServeKnockoutEventDto.


        :param id: The id of this SiteServeKnockoutEventDto.  # noqa: E501
        :type: float
        """

        self._id = id

    @property
    def home_team(self):
        """Gets the home_team of this SiteServeKnockoutEventDto.  # noqa: E501


        :return: The home_team of this SiteServeKnockoutEventDto.  # noqa: E501
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this SiteServeKnockoutEventDto.


        :param home_team: The home_team of this SiteServeKnockoutEventDto.  # noqa: E501
        :type: str
        """

        self._home_team = home_team

    @property
    def away_team(self):
        """Gets the away_team of this SiteServeKnockoutEventDto.  # noqa: E501


        :return: The away_team of this SiteServeKnockoutEventDto.  # noqa: E501
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this SiteServeKnockoutEventDto.


        :param away_team: The away_team of this SiteServeKnockoutEventDto.  # noqa: E501
        :type: str
        """

        self._away_team = away_team

    @property
    def event_name(self):
        """Gets the event_name of this SiteServeKnockoutEventDto.  # noqa: E501


        :return: The event_name of this SiteServeKnockoutEventDto.  # noqa: E501
        :rtype: str
        """
        return self._event_name

    @event_name.setter
    def event_name(self, event_name):
        """Sets the event_name of this SiteServeKnockoutEventDto.


        :param event_name: The event_name of this SiteServeKnockoutEventDto.  # noqa: E501
        :type: str
        """

        self._event_name = event_name

    @property
    def start_time(self):
        """Gets the start_time of this SiteServeKnockoutEventDto.  # noqa: E501


        :return: The start_time of this SiteServeKnockoutEventDto.  # noqa: E501
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this SiteServeKnockoutEventDto.


        :param start_time: The start_time of this SiteServeKnockoutEventDto.  # noqa: E501
        :type: str
        """

        self._start_time = start_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SiteServeKnockoutEventDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteServeKnockoutEventDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
