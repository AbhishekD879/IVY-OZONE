# coding: utf-8

"""
    Oxygen CMS REST API

    CMS Private API (Used by CMS UI)   # noqa: E501

    OpenAPI spec version: 82.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class Sport2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'image_title': 'str',
        'alt': 'str',
        'brand': 'str',
        'category_id': 'float',
        'type_ids': 'str',
        'collection_type': 'str',
        'disabled': 'bool',
        'disp_sort_name': 'str',
        'height_medium': 'float',
        'height_medium_icon': 'float',
        'height_small': 'float',
        'height_small_icon': 'float',
        'in_app': 'bool',
        'is_outright_sport': 'bool',
        'lang': 'str',
        'outcomes_template_type1': 'str',
        'outcomes_template_type2': 'str',
        'outcomes_template_type3': 'str',
        'primary_markets': 'str',
        'show_in_play': 'bool',
        'sort_order': 'float',
        'sprite_class': 'str',
        'ss_category_code': 'str',
        'svg': 'str',
        'svg_id': 'str',
        'tab_competitions': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'tab_coupons': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'tab_jackpot': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'tab_live': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'tab_matches': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'tab_outrights': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'tab_specials': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab',
        'target_uri': 'str',
        'uri_medium': 'str',
        'uri_small': 'str',
        'view_by_filters': 'str',
        'width_medium': 'float',
        'width_medium_icon': 'float',
        'width_small': 'float',
        'width_small_icon': 'float',
        'default_tab': 'str',
        'height_large': 'float',
        'height_large_icon': 'float',
        'uri_large': 'str',
        'width_large': 'float',
        'width_large_icon': 'float',
        'filename': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename',
        'svg_filename': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename',
        'icon': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename'
    }

    attribute_map = {
        'id': 'id',
        'image_title': 'imageTitle',
        'alt': 'alt',
        'brand': 'brand',
        'category_id': 'categoryId',
        'type_ids': 'typeIds',
        'collection_type': 'collectionType',
        'disabled': 'disabled',
        'disp_sort_name': 'dispSortName',
        'height_medium': 'heightMedium',
        'height_medium_icon': 'heightMediumIcon',
        'height_small': 'heightSmall',
        'height_small_icon': 'heightSmallIcon',
        'in_app': 'inApp',
        'is_outright_sport': 'isOutrightSport',
        'lang': 'lang',
        'outcomes_template_type1': 'outcomesTemplateType1',
        'outcomes_template_type2': 'outcomesTemplateType2',
        'outcomes_template_type3': 'outcomesTemplateType3',
        'primary_markets': 'primaryMarkets',
        'show_in_play': 'showInPlay',
        'sort_order': 'sortOrder',
        'sprite_class': 'spriteClass',
        'ss_category_code': 'ssCategoryCode',
        'svg': 'svg',
        'svg_id': 'svgId',
        'tab_competitions': 'tabCompetitions',
        'tab_coupons': 'tabCoupons',
        'tab_jackpot': 'tabJackpot',
        'tab_live': 'tabLive',
        'tab_matches': 'tabMatches',
        'tab_outrights': 'tabOutrights',
        'tab_specials': 'tabSpecials',
        'target_uri': 'targetUri',
        'uri_medium': 'uriMedium',
        'uri_small': 'uriSmall',
        'view_by_filters': 'viewByFilters',
        'width_medium': 'widthMedium',
        'width_medium_icon': 'widthMediumIcon',
        'width_small': 'widthSmall',
        'width_small_icon': 'widthSmallIcon',
        'default_tab': 'defaultTab',
        'height_large': 'heightLarge',
        'height_large_icon': 'heightLargeIcon',
        'uri_large': 'uriLarge',
        'width_large': 'widthLarge',
        'width_large_icon': 'widthLargeIcon',
        'filename': 'filename',
        'svg_filename': 'svgFilename',
        'icon': 'icon'
    }

    def __init__(self, id=None, image_title=None, alt=None, brand=None, category_id=None, type_ids=None, collection_type=None, disabled=None, disp_sort_name=None, height_medium=None, height_medium_icon=None, height_small=None, height_small_icon=None, in_app=None, is_outright_sport=None, lang=None, outcomes_template_type1=None, outcomes_template_type2=None, outcomes_template_type3=None, primary_markets=None, show_in_play=None, sort_order=None, sprite_class=None, ss_category_code=None, svg=None, svg_id=None, tab_competitions=None, tab_coupons=None, tab_jackpot=None, tab_live=None, tab_matches=None, tab_outrights=None, tab_specials=None, target_uri=None, uri_medium=None, uri_small=None, view_by_filters=None, width_medium=None, width_medium_icon=None, width_small=None, width_small_icon=None, default_tab=None, height_large=None, height_large_icon=None, uri_large=None, width_large=None, width_large_icon=None, filename=None, svg_filename=None, icon=None):  # noqa: E501
        """Sport2 - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._image_title = None
        self._alt = None
        self._brand = None
        self._category_id = None
        self._type_ids = None
        self._collection_type = None
        self._disabled = None
        self._disp_sort_name = None
        self._height_medium = None
        self._height_medium_icon = None
        self._height_small = None
        self._height_small_icon = None
        self._in_app = None
        self._is_outright_sport = None
        self._lang = None
        self._outcomes_template_type1 = None
        self._outcomes_template_type2 = None
        self._outcomes_template_type3 = None
        self._primary_markets = None
        self._show_in_play = None
        self._sort_order = None
        self._sprite_class = None
        self._ss_category_code = None
        self._svg = None
        self._svg_id = None
        self._tab_competitions = None
        self._tab_coupons = None
        self._tab_jackpot = None
        self._tab_live = None
        self._tab_matches = None
        self._tab_outrights = None
        self._tab_specials = None
        self._target_uri = None
        self._uri_medium = None
        self._uri_small = None
        self._view_by_filters = None
        self._width_medium = None
        self._width_medium_icon = None
        self._width_small = None
        self._width_small_icon = None
        self._default_tab = None
        self._height_large = None
        self._height_large_icon = None
        self._uri_large = None
        self._width_large = None
        self._width_large_icon = None
        self._filename = None
        self._svg_filename = None
        self._icon = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if image_title is not None:
            self.image_title = image_title
        if alt is not None:
            self.alt = alt
        if brand is not None:
            self.brand = brand
        if category_id is not None:
            self.category_id = category_id
        if type_ids is not None:
            self.type_ids = type_ids
        if collection_type is not None:
            self.collection_type = collection_type
        if disabled is not None:
            self.disabled = disabled
        if disp_sort_name is not None:
            self.disp_sort_name = disp_sort_name
        if height_medium is not None:
            self.height_medium = height_medium
        if height_medium_icon is not None:
            self.height_medium_icon = height_medium_icon
        if height_small is not None:
            self.height_small = height_small
        if height_small_icon is not None:
            self.height_small_icon = height_small_icon
        if in_app is not None:
            self.in_app = in_app
        if is_outright_sport is not None:
            self.is_outright_sport = is_outright_sport
        if lang is not None:
            self.lang = lang
        if outcomes_template_type1 is not None:
            self.outcomes_template_type1 = outcomes_template_type1
        if outcomes_template_type2 is not None:
            self.outcomes_template_type2 = outcomes_template_type2
        if outcomes_template_type3 is not None:
            self.outcomes_template_type3 = outcomes_template_type3
        if primary_markets is not None:
            self.primary_markets = primary_markets
        if show_in_play is not None:
            self.show_in_play = show_in_play
        if sort_order is not None:
            self.sort_order = sort_order
        if sprite_class is not None:
            self.sprite_class = sprite_class
        if ss_category_code is not None:
            self.ss_category_code = ss_category_code
        if svg is not None:
            self.svg = svg
        if svg_id is not None:
            self.svg_id = svg_id
        if tab_competitions is not None:
            self.tab_competitions = tab_competitions
        if tab_coupons is not None:
            self.tab_coupons = tab_coupons
        if tab_jackpot is not None:
            self.tab_jackpot = tab_jackpot
        if tab_live is not None:
            self.tab_live = tab_live
        if tab_matches is not None:
            self.tab_matches = tab_matches
        if tab_outrights is not None:
            self.tab_outrights = tab_outrights
        if tab_specials is not None:
            self.tab_specials = tab_specials
        if target_uri is not None:
            self.target_uri = target_uri
        if uri_medium is not None:
            self.uri_medium = uri_medium
        if uri_small is not None:
            self.uri_small = uri_small
        if view_by_filters is not None:
            self.view_by_filters = view_by_filters
        if width_medium is not None:
            self.width_medium = width_medium
        if width_medium_icon is not None:
            self.width_medium_icon = width_medium_icon
        if width_small is not None:
            self.width_small = width_small
        if width_small_icon is not None:
            self.width_small_icon = width_small_icon
        if default_tab is not None:
            self.default_tab = default_tab
        if height_large is not None:
            self.height_large = height_large
        if height_large_icon is not None:
            self.height_large_icon = height_large_icon
        if uri_large is not None:
            self.uri_large = uri_large
        if width_large is not None:
            self.width_large = width_large
        if width_large_icon is not None:
            self.width_large_icon = width_large_icon
        if filename is not None:
            self.filename = filename
        if svg_filename is not None:
            self.svg_filename = svg_filename
        if icon is not None:
            self.icon = icon

    @property
    def id(self):
        """Gets the id of this Sport2.  # noqa: E501


        :return: The id of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Sport2.


        :param id: The id of this Sport2.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def image_title(self):
        """Gets the image_title of this Sport2.  # noqa: E501


        :return: The image_title of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._image_title

    @image_title.setter
    def image_title(self, image_title):
        """Sets the image_title of this Sport2.


        :param image_title: The image_title of this Sport2.  # noqa: E501
        :type: str
        """

        self._image_title = image_title

    @property
    def alt(self):
        """Gets the alt of this Sport2.  # noqa: E501


        :return: The alt of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._alt

    @alt.setter
    def alt(self, alt):
        """Sets the alt of this Sport2.


        :param alt: The alt of this Sport2.  # noqa: E501
        :type: str
        """

        self._alt = alt

    @property
    def brand(self):
        """Gets the brand of this Sport2.  # noqa: E501


        :return: The brand of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this Sport2.


        :param brand: The brand of this Sport2.  # noqa: E501
        :type: str
        """

        self._brand = brand

    @property
    def category_id(self):
        """Gets the category_id of this Sport2.  # noqa: E501


        :return: The category_id of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this Sport2.


        :param category_id: The category_id of this Sport2.  # noqa: E501
        :type: float
        """

        self._category_id = category_id

    @property
    def type_ids(self):
        """Gets the type_ids of this Sport2.  # noqa: E501


        :return: The type_ids of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._type_ids

    @type_ids.setter
    def type_ids(self, type_ids):
        """Sets the type_ids of this Sport2.


        :param type_ids: The type_ids of this Sport2.  # noqa: E501
        :type: str
        """

        self._type_ids = type_ids

    @property
    def collection_type(self):
        """Gets the collection_type of this Sport2.  # noqa: E501


        :return: The collection_type of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._collection_type

    @collection_type.setter
    def collection_type(self, collection_type):
        """Sets the collection_type of this Sport2.


        :param collection_type: The collection_type of this Sport2.  # noqa: E501
        :type: str
        """

        self._collection_type = collection_type

    @property
    def disabled(self):
        """Gets the disabled of this Sport2.  # noqa: E501


        :return: The disabled of this Sport2.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this Sport2.


        :param disabled: The disabled of this Sport2.  # noqa: E501
        :type: bool
        """

        self._disabled = disabled

    @property
    def disp_sort_name(self):
        """Gets the disp_sort_name of this Sport2.  # noqa: E501


        :return: The disp_sort_name of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._disp_sort_name

    @disp_sort_name.setter
    def disp_sort_name(self, disp_sort_name):
        """Sets the disp_sort_name of this Sport2.


        :param disp_sort_name: The disp_sort_name of this Sport2.  # noqa: E501
        :type: str
        """

        self._disp_sort_name = disp_sort_name

    @property
    def height_medium(self):
        """Gets the height_medium of this Sport2.  # noqa: E501


        :return: The height_medium of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._height_medium

    @height_medium.setter
    def height_medium(self, height_medium):
        """Sets the height_medium of this Sport2.


        :param height_medium: The height_medium of this Sport2.  # noqa: E501
        :type: float
        """

        self._height_medium = height_medium

    @property
    def height_medium_icon(self):
        """Gets the height_medium_icon of this Sport2.  # noqa: E501


        :return: The height_medium_icon of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._height_medium_icon

    @height_medium_icon.setter
    def height_medium_icon(self, height_medium_icon):
        """Sets the height_medium_icon of this Sport2.


        :param height_medium_icon: The height_medium_icon of this Sport2.  # noqa: E501
        :type: float
        """

        self._height_medium_icon = height_medium_icon

    @property
    def height_small(self):
        """Gets the height_small of this Sport2.  # noqa: E501


        :return: The height_small of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._height_small

    @height_small.setter
    def height_small(self, height_small):
        """Sets the height_small of this Sport2.


        :param height_small: The height_small of this Sport2.  # noqa: E501
        :type: float
        """

        self._height_small = height_small

    @property
    def height_small_icon(self):
        """Gets the height_small_icon of this Sport2.  # noqa: E501


        :return: The height_small_icon of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._height_small_icon

    @height_small_icon.setter
    def height_small_icon(self, height_small_icon):
        """Sets the height_small_icon of this Sport2.


        :param height_small_icon: The height_small_icon of this Sport2.  # noqa: E501
        :type: float
        """

        self._height_small_icon = height_small_icon

    @property
    def in_app(self):
        """Gets the in_app of this Sport2.  # noqa: E501


        :return: The in_app of this Sport2.  # noqa: E501
        :rtype: bool
        """
        return self._in_app

    @in_app.setter
    def in_app(self, in_app):
        """Sets the in_app of this Sport2.


        :param in_app: The in_app of this Sport2.  # noqa: E501
        :type: bool
        """

        self._in_app = in_app

    @property
    def is_outright_sport(self):
        """Gets the is_outright_sport of this Sport2.  # noqa: E501


        :return: The is_outright_sport of this Sport2.  # noqa: E501
        :rtype: bool
        """
        return self._is_outright_sport

    @is_outright_sport.setter
    def is_outright_sport(self, is_outright_sport):
        """Sets the is_outright_sport of this Sport2.


        :param is_outright_sport: The is_outright_sport of this Sport2.  # noqa: E501
        :type: bool
        """

        self._is_outright_sport = is_outright_sport

    @property
    def lang(self):
        """Gets the lang of this Sport2.  # noqa: E501


        :return: The lang of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this Sport2.


        :param lang: The lang of this Sport2.  # noqa: E501
        :type: str
        """

        self._lang = lang

    @property
    def outcomes_template_type1(self):
        """Gets the outcomes_template_type1 of this Sport2.  # noqa: E501


        :return: The outcomes_template_type1 of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._outcomes_template_type1

    @outcomes_template_type1.setter
    def outcomes_template_type1(self, outcomes_template_type1):
        """Sets the outcomes_template_type1 of this Sport2.


        :param outcomes_template_type1: The outcomes_template_type1 of this Sport2.  # noqa: E501
        :type: str
        """

        self._outcomes_template_type1 = outcomes_template_type1

    @property
    def outcomes_template_type2(self):
        """Gets the outcomes_template_type2 of this Sport2.  # noqa: E501


        :return: The outcomes_template_type2 of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._outcomes_template_type2

    @outcomes_template_type2.setter
    def outcomes_template_type2(self, outcomes_template_type2):
        """Sets the outcomes_template_type2 of this Sport2.


        :param outcomes_template_type2: The outcomes_template_type2 of this Sport2.  # noqa: E501
        :type: str
        """

        self._outcomes_template_type2 = outcomes_template_type2

    @property
    def outcomes_template_type3(self):
        """Gets the outcomes_template_type3 of this Sport2.  # noqa: E501


        :return: The outcomes_template_type3 of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._outcomes_template_type3

    @outcomes_template_type3.setter
    def outcomes_template_type3(self, outcomes_template_type3):
        """Sets the outcomes_template_type3 of this Sport2.


        :param outcomes_template_type3: The outcomes_template_type3 of this Sport2.  # noqa: E501
        :type: str
        """

        self._outcomes_template_type3 = outcomes_template_type3

    @property
    def primary_markets(self):
        """Gets the primary_markets of this Sport2.  # noqa: E501


        :return: The primary_markets of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._primary_markets

    @primary_markets.setter
    def primary_markets(self, primary_markets):
        """Sets the primary_markets of this Sport2.


        :param primary_markets: The primary_markets of this Sport2.  # noqa: E501
        :type: str
        """

        self._primary_markets = primary_markets

    @property
    def show_in_play(self):
        """Gets the show_in_play of this Sport2.  # noqa: E501


        :return: The show_in_play of this Sport2.  # noqa: E501
        :rtype: bool
        """
        return self._show_in_play

    @show_in_play.setter
    def show_in_play(self, show_in_play):
        """Sets the show_in_play of this Sport2.


        :param show_in_play: The show_in_play of this Sport2.  # noqa: E501
        :type: bool
        """

        self._show_in_play = show_in_play

    @property
    def sort_order(self):
        """Gets the sort_order of this Sport2.  # noqa: E501


        :return: The sort_order of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this Sport2.


        :param sort_order: The sort_order of this Sport2.  # noqa: E501
        :type: float
        """

        self._sort_order = sort_order

    @property
    def sprite_class(self):
        """Gets the sprite_class of this Sport2.  # noqa: E501


        :return: The sprite_class of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._sprite_class

    @sprite_class.setter
    def sprite_class(self, sprite_class):
        """Sets the sprite_class of this Sport2.


        :param sprite_class: The sprite_class of this Sport2.  # noqa: E501
        :type: str
        """

        self._sprite_class = sprite_class

    @property
    def ss_category_code(self):
        """Gets the ss_category_code of this Sport2.  # noqa: E501


        :return: The ss_category_code of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._ss_category_code

    @ss_category_code.setter
    def ss_category_code(self, ss_category_code):
        """Sets the ss_category_code of this Sport2.


        :param ss_category_code: The ss_category_code of this Sport2.  # noqa: E501
        :type: str
        """

        self._ss_category_code = ss_category_code

    @property
    def svg(self):
        """Gets the svg of this Sport2.  # noqa: E501


        :return: The svg of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._svg

    @svg.setter
    def svg(self, svg):
        """Sets the svg of this Sport2.


        :param svg: The svg of this Sport2.  # noqa: E501
        :type: str
        """

        self._svg = svg

    @property
    def svg_id(self):
        """Gets the svg_id of this Sport2.  # noqa: E501


        :return: The svg_id of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._svg_id

    @svg_id.setter
    def svg_id(self, svg_id):
        """Sets the svg_id of this Sport2.


        :param svg_id: The svg_id of this Sport2.  # noqa: E501
        :type: str
        """

        self._svg_id = svg_id

    @property
    def tab_competitions(self):
        """Gets the tab_competitions of this Sport2.  # noqa: E501


        :return: The tab_competitions of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_competitions

    @tab_competitions.setter
    def tab_competitions(self, tab_competitions):
        """Sets the tab_competitions of this Sport2.


        :param tab_competitions: The tab_competitions of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_competitions = tab_competitions

    @property
    def tab_coupons(self):
        """Gets the tab_coupons of this Sport2.  # noqa: E501


        :return: The tab_coupons of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_coupons

    @tab_coupons.setter
    def tab_coupons(self, tab_coupons):
        """Sets the tab_coupons of this Sport2.


        :param tab_coupons: The tab_coupons of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_coupons = tab_coupons

    @property
    def tab_jackpot(self):
        """Gets the tab_jackpot of this Sport2.  # noqa: E501


        :return: The tab_jackpot of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_jackpot

    @tab_jackpot.setter
    def tab_jackpot(self, tab_jackpot):
        """Sets the tab_jackpot of this Sport2.


        :param tab_jackpot: The tab_jackpot of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_jackpot = tab_jackpot

    @property
    def tab_live(self):
        """Gets the tab_live of this Sport2.  # noqa: E501


        :return: The tab_live of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_live

    @tab_live.setter
    def tab_live(self, tab_live):
        """Sets the tab_live of this Sport2.


        :param tab_live: The tab_live of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_live = tab_live

    @property
    def tab_matches(self):
        """Gets the tab_matches of this Sport2.  # noqa: E501


        :return: The tab_matches of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_matches

    @tab_matches.setter
    def tab_matches(self, tab_matches):
        """Sets the tab_matches of this Sport2.


        :param tab_matches: The tab_matches of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_matches = tab_matches

    @property
    def tab_outrights(self):
        """Gets the tab_outrights of this Sport2.  # noqa: E501


        :return: The tab_outrights of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_outrights

    @tab_outrights.setter
    def tab_outrights(self, tab_outrights):
        """Sets the tab_outrights of this Sport2.


        :param tab_outrights: The tab_outrights of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_outrights = tab_outrights

    @property
    def tab_specials(self):
        """Gets the tab_specials of this Sport2.  # noqa: E501


        :return: The tab_specials of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """
        return self._tab_specials

    @tab_specials.setter
    def tab_specials(self, tab_specials):
        """Sets the tab_specials of this Sport2.


        :param tab_specials: The tab_specials of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentstabYamlTab
        """

        self._tab_specials = tab_specials

    @property
    def target_uri(self):
        """Gets the target_uri of this Sport2.  # noqa: E501


        :return: The target_uri of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._target_uri

    @target_uri.setter
    def target_uri(self, target_uri):
        """Sets the target_uri of this Sport2.


        :param target_uri: The target_uri of this Sport2.  # noqa: E501
        :type: str
        """

        self._target_uri = target_uri

    @property
    def uri_medium(self):
        """Gets the uri_medium of this Sport2.  # noqa: E501


        :return: The uri_medium of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._uri_medium

    @uri_medium.setter
    def uri_medium(self, uri_medium):
        """Sets the uri_medium of this Sport2.


        :param uri_medium: The uri_medium of this Sport2.  # noqa: E501
        :type: str
        """

        self._uri_medium = uri_medium

    @property
    def uri_small(self):
        """Gets the uri_small of this Sport2.  # noqa: E501


        :return: The uri_small of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._uri_small

    @uri_small.setter
    def uri_small(self, uri_small):
        """Sets the uri_small of this Sport2.


        :param uri_small: The uri_small of this Sport2.  # noqa: E501
        :type: str
        """

        self._uri_small = uri_small

    @property
    def view_by_filters(self):
        """Gets the view_by_filters of this Sport2.  # noqa: E501


        :return: The view_by_filters of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._view_by_filters

    @view_by_filters.setter
    def view_by_filters(self, view_by_filters):
        """Sets the view_by_filters of this Sport2.


        :param view_by_filters: The view_by_filters of this Sport2.  # noqa: E501
        :type: str
        """

        self._view_by_filters = view_by_filters

    @property
    def width_medium(self):
        """Gets the width_medium of this Sport2.  # noqa: E501


        :return: The width_medium of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._width_medium

    @width_medium.setter
    def width_medium(self, width_medium):
        """Sets the width_medium of this Sport2.


        :param width_medium: The width_medium of this Sport2.  # noqa: E501
        :type: float
        """

        self._width_medium = width_medium

    @property
    def width_medium_icon(self):
        """Gets the width_medium_icon of this Sport2.  # noqa: E501


        :return: The width_medium_icon of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._width_medium_icon

    @width_medium_icon.setter
    def width_medium_icon(self, width_medium_icon):
        """Sets the width_medium_icon of this Sport2.


        :param width_medium_icon: The width_medium_icon of this Sport2.  # noqa: E501
        :type: float
        """

        self._width_medium_icon = width_medium_icon

    @property
    def width_small(self):
        """Gets the width_small of this Sport2.  # noqa: E501


        :return: The width_small of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._width_small

    @width_small.setter
    def width_small(self, width_small):
        """Sets the width_small of this Sport2.


        :param width_small: The width_small of this Sport2.  # noqa: E501
        :type: float
        """

        self._width_small = width_small

    @property
    def width_small_icon(self):
        """Gets the width_small_icon of this Sport2.  # noqa: E501


        :return: The width_small_icon of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._width_small_icon

    @width_small_icon.setter
    def width_small_icon(self, width_small_icon):
        """Sets the width_small_icon of this Sport2.


        :param width_small_icon: The width_small_icon of this Sport2.  # noqa: E501
        :type: float
        """

        self._width_small_icon = width_small_icon

    @property
    def default_tab(self):
        """Gets the default_tab of this Sport2.  # noqa: E501


        :return: The default_tab of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._default_tab

    @default_tab.setter
    def default_tab(self, default_tab):
        """Sets the default_tab of this Sport2.


        :param default_tab: The default_tab of this Sport2.  # noqa: E501
        :type: str
        """

        self._default_tab = default_tab

    @property
    def height_large(self):
        """Gets the height_large of this Sport2.  # noqa: E501


        :return: The height_large of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._height_large

    @height_large.setter
    def height_large(self, height_large):
        """Sets the height_large of this Sport2.


        :param height_large: The height_large of this Sport2.  # noqa: E501
        :type: float
        """

        self._height_large = height_large

    @property
    def height_large_icon(self):
        """Gets the height_large_icon of this Sport2.  # noqa: E501


        :return: The height_large_icon of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._height_large_icon

    @height_large_icon.setter
    def height_large_icon(self, height_large_icon):
        """Sets the height_large_icon of this Sport2.


        :param height_large_icon: The height_large_icon of this Sport2.  # noqa: E501
        :type: float
        """

        self._height_large_icon = height_large_icon

    @property
    def uri_large(self):
        """Gets the uri_large of this Sport2.  # noqa: E501


        :return: The uri_large of this Sport2.  # noqa: E501
        :rtype: str
        """
        return self._uri_large

    @uri_large.setter
    def uri_large(self, uri_large):
        """Sets the uri_large of this Sport2.


        :param uri_large: The uri_large of this Sport2.  # noqa: E501
        :type: str
        """

        self._uri_large = uri_large

    @property
    def width_large(self):
        """Gets the width_large of this Sport2.  # noqa: E501


        :return: The width_large of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._width_large

    @width_large.setter
    def width_large(self, width_large):
        """Sets the width_large of this Sport2.


        :param width_large: The width_large of this Sport2.  # noqa: E501
        :type: float
        """

        self._width_large = width_large

    @property
    def width_large_icon(self):
        """Gets the width_large_icon of this Sport2.  # noqa: E501


        :return: The width_large_icon of this Sport2.  # noqa: E501
        :rtype: float
        """
        return self._width_large_icon

    @width_large_icon.setter
    def width_large_icon(self, width_large_icon):
        """Sets the width_large_icon of this Sport2.


        :param width_large_icon: The width_large_icon of this Sport2.  # noqa: E501
        :type: float
        """

        self._width_large_icon = width_large_icon

    @property
    def filename(self):
        """Gets the filename of this Sport2.  # noqa: E501


        :return: The filename of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this Sport2.


        :param filename: The filename of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """

        self._filename = filename

    @property
    def svg_filename(self):
        """Gets the svg_filename of this Sport2.  # noqa: E501


        :return: The svg_filename of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """
        return self._svg_filename

    @svg_filename.setter
    def svg_filename(self, svg_filename):
        """Sets the svg_filename of this Sport2.


        :param svg_filename: The svg_filename of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """

        self._svg_filename = svg_filename

    @property
    def icon(self):
        """Gets the icon of this Sport2.  # noqa: E501


        :return: The icon of this Sport2.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this Sport2.


        :param icon: The icon of this Sport2.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsfilenameYamlFilename
        """

        self._icon = icon

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Sport2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Sport2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
