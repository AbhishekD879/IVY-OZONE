# coding: utf-8

"""
    Oxygen CMS REST API

    CMS Private API (Used by CMS UI)   # noqa: E501

    OpenAPI spec version: 82.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class SportCategory(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'alt': 'str',
        'brand': 'str',
        'category_id': 'float',
        'disabled': 'bool',
        'filename': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename',
        'height_medium': 'float',
        'height_medium_icon': 'float',
        'height_small': 'float',
        'height_small_icon': 'float',
        'icon': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename',
        'image_title': 'str',
        'in_app': 'bool',
        'is_top_sport': 'bool',
        'key': 'str',
        'lang': 'str',
        'link': 'str',
        'path': 'str',
        'show_in_menu': 'bool',
        'sort_order': 'float',
        'sprite_class': 'str',
        'ss_category_code': 'str',
        'svg': 'str',
        'svg_filename': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename',
        'svg_id': 'str',
        'target_uri': 'str',
        'uri_medium': 'str',
        'uri_medium_icon': 'str',
        'uri_small': 'str',
        'uri_small_icon': 'str',
        'width_medium': 'float',
        'width_medium_icon': 'float',
        'width_small': 'float',
        'width_small_icon': 'float',
        'collection_type': 'str',
        'show_in_az': 'bool',
        'show_in_home': 'bool',
        'show_in_play': 'bool',
        'height_large': 'float',
        'height_large_icon': 'float',
        'uri_large': 'str',
        'width_large': 'float',
        'width_large_icon': 'float',
        'score_board_url': 'str',
        'matches_tab_enabled': 'bool',
        'inplay_tab_enabled': 'bool',
        'competition_tab_enabled': 'bool',
        'coupons_tab_enabled': 'bool',
        'outrights_tab_enabled': 'bool',
        'specials_tab_enabled': 'bool',
        'highlight_carousel_enabled': 'bool',
        'surface_bets_enabled': 'bool',
        'quick_link_enabled': 'bool',
        'inplay_enabled': 'bool',
        'inplay_sport_module': 'UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsinplaySportModuleYamlInplaySportModule'
    }

    attribute_map = {
        'id': '_id',
        'alt': 'alt',
        'brand': 'brand',
        'category_id': 'categoryId',
        'disabled': 'disabled',
        'filename': 'filename',
        'height_medium': 'heightMedium',
        'height_medium_icon': 'heightMediumIcon',
        'height_small': 'heightSmall',
        'height_small_icon': 'heightSmallIcon',
        'icon': 'icon',
        'image_title': 'imageTitle',
        'in_app': 'inApp',
        'is_top_sport': 'isTopSport',
        'key': 'key',
        'lang': 'lang',
        'link': 'link',
        'path': 'path',
        'show_in_menu': 'showInMenu',
        'sort_order': 'sortOrder',
        'sprite_class': 'spriteClass',
        'ss_category_code': 'ssCategoryCode',
        'svg': 'svg',
        'svg_filename': 'svgFilename',
        'svg_id': 'svgId',
        'target_uri': 'targetUri',
        'uri_medium': 'uriMedium',
        'uri_medium_icon': 'uriMediumIcon',
        'uri_small': 'uriSmall',
        'uri_small_icon': 'uriSmallIcon',
        'width_medium': 'widthMedium',
        'width_medium_icon': 'widthMediumIcon',
        'width_small': 'widthSmall',
        'width_small_icon': 'widthSmallIcon',
        'collection_type': 'collectionType',
        'show_in_az': 'showInAZ',
        'show_in_home': 'showInHome',
        'show_in_play': 'showInPlay',
        'height_large': 'heightLarge',
        'height_large_icon': 'heightLargeIcon',
        'uri_large': 'uriLarge',
        'width_large': 'widthLarge',
        'width_large_icon': 'widthLargeIcon',
        'score_board_url': 'scoreBoardUrl',
        'matches_tab_enabled': 'matchesTabEnabled',
        'inplay_tab_enabled': 'inplayTabEnabled',
        'competition_tab_enabled': 'competitionTabEnabled',
        'coupons_tab_enabled': 'couponsTabEnabled',
        'outrights_tab_enabled': 'outrightsTabEnabled',
        'specials_tab_enabled': 'specialsTabEnabled',
        'highlight_carousel_enabled': 'highlightCarouselEnabled',
        'surface_bets_enabled': 'surfaceBetsEnabled',
        'quick_link_enabled': 'quickLinkEnabled',
        'inplay_enabled': 'inplayEnabled',
        'inplay_sport_module': 'inplaySportModule'
    }

    def __init__(self, id=None, alt=None, brand=None, category_id=None, disabled=None, filename=None, height_medium=None, height_medium_icon=None, height_small=None, height_small_icon=None, icon=None, image_title=None, in_app=None, is_top_sport=None, key=None, lang=None, link=None, path=None, show_in_menu=None, sort_order=None, sprite_class=None, ss_category_code=None, svg=None, svg_filename=None, svg_id=None, target_uri=None, uri_medium=None, uri_medium_icon=None, uri_small=None, uri_small_icon=None, width_medium=None, width_medium_icon=None, width_small=None, width_small_icon=None, collection_type=None, show_in_az=None, show_in_home=None, show_in_play=None, height_large=None, height_large_icon=None, uri_large=None, width_large=None, width_large_icon=None, score_board_url=None, matches_tab_enabled=None, inplay_tab_enabled=None, competition_tab_enabled=None, coupons_tab_enabled=None, outrights_tab_enabled=None, specials_tab_enabled=None, highlight_carousel_enabled=None, surface_bets_enabled=None, quick_link_enabled=None, inplay_enabled=None, inplay_sport_module=None):  # noqa: E501
        """SportCategory - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._alt = None
        self._brand = None
        self._category_id = None
        self._disabled = None
        self._filename = None
        self._height_medium = None
        self._height_medium_icon = None
        self._height_small = None
        self._height_small_icon = None
        self._icon = None
        self._image_title = None
        self._in_app = None
        self._is_top_sport = None
        self._key = None
        self._lang = None
        self._link = None
        self._path = None
        self._show_in_menu = None
        self._sort_order = None
        self._sprite_class = None
        self._ss_category_code = None
        self._svg = None
        self._svg_filename = None
        self._svg_id = None
        self._target_uri = None
        self._uri_medium = None
        self._uri_medium_icon = None
        self._uri_small = None
        self._uri_small_icon = None
        self._width_medium = None
        self._width_medium_icon = None
        self._width_small = None
        self._width_small_icon = None
        self._collection_type = None
        self._show_in_az = None
        self._show_in_home = None
        self._show_in_play = None
        self._height_large = None
        self._height_large_icon = None
        self._uri_large = None
        self._width_large = None
        self._width_large_icon = None
        self._score_board_url = None
        self._matches_tab_enabled = None
        self._inplay_tab_enabled = None
        self._competition_tab_enabled = None
        self._coupons_tab_enabled = None
        self._outrights_tab_enabled = None
        self._specials_tab_enabled = None
        self._highlight_carousel_enabled = None
        self._surface_bets_enabled = None
        self._quick_link_enabled = None
        self._inplay_enabled = None
        self._inplay_sport_module = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if alt is not None:
            self.alt = alt
        if brand is not None:
            self.brand = brand
        if category_id is not None:
            self.category_id = category_id
        if disabled is not None:
            self.disabled = disabled
        if filename is not None:
            self.filename = filename
        if height_medium is not None:
            self.height_medium = height_medium
        if height_medium_icon is not None:
            self.height_medium_icon = height_medium_icon
        if height_small is not None:
            self.height_small = height_small
        if height_small_icon is not None:
            self.height_small_icon = height_small_icon
        if icon is not None:
            self.icon = icon
        if image_title is not None:
            self.image_title = image_title
        if in_app is not None:
            self.in_app = in_app
        if is_top_sport is not None:
            self.is_top_sport = is_top_sport
        if key is not None:
            self.key = key
        if lang is not None:
            self.lang = lang
        if link is not None:
            self.link = link
        if path is not None:
            self.path = path
        if show_in_menu is not None:
            self.show_in_menu = show_in_menu
        if sort_order is not None:
            self.sort_order = sort_order
        if sprite_class is not None:
            self.sprite_class = sprite_class
        if ss_category_code is not None:
            self.ss_category_code = ss_category_code
        if svg is not None:
            self.svg = svg
        if svg_filename is not None:
            self.svg_filename = svg_filename
        if svg_id is not None:
            self.svg_id = svg_id
        if target_uri is not None:
            self.target_uri = target_uri
        if uri_medium is not None:
            self.uri_medium = uri_medium
        if uri_medium_icon is not None:
            self.uri_medium_icon = uri_medium_icon
        if uri_small is not None:
            self.uri_small = uri_small
        if uri_small_icon is not None:
            self.uri_small_icon = uri_small_icon
        if width_medium is not None:
            self.width_medium = width_medium
        if width_medium_icon is not None:
            self.width_medium_icon = width_medium_icon
        if width_small is not None:
            self.width_small = width_small
        if width_small_icon is not None:
            self.width_small_icon = width_small_icon
        if collection_type is not None:
            self.collection_type = collection_type
        if show_in_az is not None:
            self.show_in_az = show_in_az
        if show_in_home is not None:
            self.show_in_home = show_in_home
        if show_in_play is not None:
            self.show_in_play = show_in_play
        if height_large is not None:
            self.height_large = height_large
        if height_large_icon is not None:
            self.height_large_icon = height_large_icon
        if uri_large is not None:
            self.uri_large = uri_large
        if width_large is not None:
            self.width_large = width_large
        if width_large_icon is not None:
            self.width_large_icon = width_large_icon
        if score_board_url is not None:
            self.score_board_url = score_board_url
        if matches_tab_enabled is not None:
            self.matches_tab_enabled = matches_tab_enabled
        if inplay_tab_enabled is not None:
            self.inplay_tab_enabled = inplay_tab_enabled
        if competition_tab_enabled is not None:
            self.competition_tab_enabled = competition_tab_enabled
        if coupons_tab_enabled is not None:
            self.coupons_tab_enabled = coupons_tab_enabled
        if outrights_tab_enabled is not None:
            self.outrights_tab_enabled = outrights_tab_enabled
        if specials_tab_enabled is not None:
            self.specials_tab_enabled = specials_tab_enabled
        if highlight_carousel_enabled is not None:
            self.highlight_carousel_enabled = highlight_carousel_enabled
        if surface_bets_enabled is not None:
            self.surface_bets_enabled = surface_bets_enabled
        if quick_link_enabled is not None:
            self.quick_link_enabled = quick_link_enabled
        if inplay_enabled is not None:
            self.inplay_enabled = inplay_enabled
        if inplay_sport_module is not None:
            self.inplay_sport_module = inplay_sport_module

    @property
    def id(self):
        """Gets the id of this SportCategory.  # noqa: E501


        :return: The id of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SportCategory.


        :param id: The id of this SportCategory.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def alt(self):
        """Gets the alt of this SportCategory.  # noqa: E501


        :return: The alt of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._alt

    @alt.setter
    def alt(self, alt):
        """Sets the alt of this SportCategory.


        :param alt: The alt of this SportCategory.  # noqa: E501
        :type: str
        """

        self._alt = alt

    @property
    def brand(self):
        """Gets the brand of this SportCategory.  # noqa: E501


        :return: The brand of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this SportCategory.


        :param brand: The brand of this SportCategory.  # noqa: E501
        :type: str
        """

        self._brand = brand

    @property
    def category_id(self):
        """Gets the category_id of this SportCategory.  # noqa: E501


        :return: The category_id of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this SportCategory.


        :param category_id: The category_id of this SportCategory.  # noqa: E501
        :type: float
        """

        self._category_id = category_id

    @property
    def disabled(self):
        """Gets the disabled of this SportCategory.  # noqa: E501


        :return: The disabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this SportCategory.


        :param disabled: The disabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._disabled = disabled

    @property
    def filename(self):
        """Gets the filename of this SportCategory.  # noqa: E501


        :return: The filename of this SportCategory.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this SportCategory.


        :param filename: The filename of this SportCategory.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename
        """

        self._filename = filename

    @property
    def height_medium(self):
        """Gets the height_medium of this SportCategory.  # noqa: E501


        :return: The height_medium of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._height_medium

    @height_medium.setter
    def height_medium(self, height_medium):
        """Sets the height_medium of this SportCategory.


        :param height_medium: The height_medium of this SportCategory.  # noqa: E501
        :type: float
        """

        self._height_medium = height_medium

    @property
    def height_medium_icon(self):
        """Gets the height_medium_icon of this SportCategory.  # noqa: E501


        :return: The height_medium_icon of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._height_medium_icon

    @height_medium_icon.setter
    def height_medium_icon(self, height_medium_icon):
        """Sets the height_medium_icon of this SportCategory.


        :param height_medium_icon: The height_medium_icon of this SportCategory.  # noqa: E501
        :type: float
        """

        self._height_medium_icon = height_medium_icon

    @property
    def height_small(self):
        """Gets the height_small of this SportCategory.  # noqa: E501


        :return: The height_small of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._height_small

    @height_small.setter
    def height_small(self, height_small):
        """Sets the height_small of this SportCategory.


        :param height_small: The height_small of this SportCategory.  # noqa: E501
        :type: float
        """

        self._height_small = height_small

    @property
    def height_small_icon(self):
        """Gets the height_small_icon of this SportCategory.  # noqa: E501


        :return: The height_small_icon of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._height_small_icon

    @height_small_icon.setter
    def height_small_icon(self, height_small_icon):
        """Sets the height_small_icon of this SportCategory.


        :param height_small_icon: The height_small_icon of this SportCategory.  # noqa: E501
        :type: float
        """

        self._height_small_icon = height_small_icon

    @property
    def icon(self):
        """Gets the icon of this SportCategory.  # noqa: E501


        :return: The icon of this SportCategory.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this SportCategory.


        :param icon: The icon of this SportCategory.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename
        """

        self._icon = icon

    @property
    def image_title(self):
        """Gets the image_title of this SportCategory.  # noqa: E501


        :return: The image_title of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._image_title

    @image_title.setter
    def image_title(self, image_title):
        """Sets the image_title of this SportCategory.


        :param image_title: The image_title of this SportCategory.  # noqa: E501
        :type: str
        """

        self._image_title = image_title

    @property
    def in_app(self):
        """Gets the in_app of this SportCategory.  # noqa: E501


        :return: The in_app of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._in_app

    @in_app.setter
    def in_app(self, in_app):
        """Sets the in_app of this SportCategory.


        :param in_app: The in_app of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._in_app = in_app

    @property
    def is_top_sport(self):
        """Gets the is_top_sport of this SportCategory.  # noqa: E501


        :return: The is_top_sport of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._is_top_sport

    @is_top_sport.setter
    def is_top_sport(self, is_top_sport):
        """Sets the is_top_sport of this SportCategory.


        :param is_top_sport: The is_top_sport of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._is_top_sport = is_top_sport

    @property
    def key(self):
        """Gets the key of this SportCategory.  # noqa: E501


        :return: The key of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SportCategory.


        :param key: The key of this SportCategory.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def lang(self):
        """Gets the lang of this SportCategory.  # noqa: E501


        :return: The lang of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this SportCategory.


        :param lang: The lang of this SportCategory.  # noqa: E501
        :type: str
        """

        self._lang = lang

    @property
    def link(self):
        """Gets the link of this SportCategory.  # noqa: E501


        :return: The link of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this SportCategory.


        :param link: The link of this SportCategory.  # noqa: E501
        :type: str
        """

        self._link = link

    @property
    def path(self):
        """Gets the path of this SportCategory.  # noqa: E501


        :return: The path of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SportCategory.


        :param path: The path of this SportCategory.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def show_in_menu(self):
        """Gets the show_in_menu of this SportCategory.  # noqa: E501


        :return: The show_in_menu of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._show_in_menu

    @show_in_menu.setter
    def show_in_menu(self, show_in_menu):
        """Sets the show_in_menu of this SportCategory.


        :param show_in_menu: The show_in_menu of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._show_in_menu = show_in_menu

    @property
    def sort_order(self):
        """Gets the sort_order of this SportCategory.  # noqa: E501


        :return: The sort_order of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this SportCategory.


        :param sort_order: The sort_order of this SportCategory.  # noqa: E501
        :type: float
        """

        self._sort_order = sort_order

    @property
    def sprite_class(self):
        """Gets the sprite_class of this SportCategory.  # noqa: E501


        :return: The sprite_class of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._sprite_class

    @sprite_class.setter
    def sprite_class(self, sprite_class):
        """Sets the sprite_class of this SportCategory.


        :param sprite_class: The sprite_class of this SportCategory.  # noqa: E501
        :type: str
        """

        self._sprite_class = sprite_class

    @property
    def ss_category_code(self):
        """Gets the ss_category_code of this SportCategory.  # noqa: E501


        :return: The ss_category_code of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._ss_category_code

    @ss_category_code.setter
    def ss_category_code(self, ss_category_code):
        """Sets the ss_category_code of this SportCategory.


        :param ss_category_code: The ss_category_code of this SportCategory.  # noqa: E501
        :type: str
        """

        self._ss_category_code = ss_category_code

    @property
    def svg(self):
        """Gets the svg of this SportCategory.  # noqa: E501


        :return: The svg of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._svg

    @svg.setter
    def svg(self, svg):
        """Sets the svg of this SportCategory.


        :param svg: The svg of this SportCategory.  # noqa: E501
        :type: str
        """

        self._svg = svg

    @property
    def svg_filename(self):
        """Gets the svg_filename of this SportCategory.  # noqa: E501


        :return: The svg_filename of this SportCategory.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename
        """
        return self._svg_filename

    @svg_filename.setter
    def svg_filename(self, svg_filename):
        """Sets the svg_filename of this SportCategory.


        :param svg_filename: The svg_filename of this SportCategory.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentssvgFilenameYamlSvgFilename
        """

        self._svg_filename = svg_filename

    @property
    def svg_id(self):
        """Gets the svg_id of this SportCategory.  # noqa: E501


        :return: The svg_id of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._svg_id

    @svg_id.setter
    def svg_id(self, svg_id):
        """Sets the svg_id of this SportCategory.


        :param svg_id: The svg_id of this SportCategory.  # noqa: E501
        :type: str
        """

        self._svg_id = svg_id

    @property
    def target_uri(self):
        """Gets the target_uri of this SportCategory.  # noqa: E501


        :return: The target_uri of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._target_uri

    @target_uri.setter
    def target_uri(self, target_uri):
        """Sets the target_uri of this SportCategory.


        :param target_uri: The target_uri of this SportCategory.  # noqa: E501
        :type: str
        """

        self._target_uri = target_uri

    @property
    def uri_medium(self):
        """Gets the uri_medium of this SportCategory.  # noqa: E501


        :return: The uri_medium of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._uri_medium

    @uri_medium.setter
    def uri_medium(self, uri_medium):
        """Sets the uri_medium of this SportCategory.


        :param uri_medium: The uri_medium of this SportCategory.  # noqa: E501
        :type: str
        """

        self._uri_medium = uri_medium

    @property
    def uri_medium_icon(self):
        """Gets the uri_medium_icon of this SportCategory.  # noqa: E501


        :return: The uri_medium_icon of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._uri_medium_icon

    @uri_medium_icon.setter
    def uri_medium_icon(self, uri_medium_icon):
        """Sets the uri_medium_icon of this SportCategory.


        :param uri_medium_icon: The uri_medium_icon of this SportCategory.  # noqa: E501
        :type: str
        """

        self._uri_medium_icon = uri_medium_icon

    @property
    def uri_small(self):
        """Gets the uri_small of this SportCategory.  # noqa: E501


        :return: The uri_small of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._uri_small

    @uri_small.setter
    def uri_small(self, uri_small):
        """Sets the uri_small of this SportCategory.


        :param uri_small: The uri_small of this SportCategory.  # noqa: E501
        :type: str
        """

        self._uri_small = uri_small

    @property
    def uri_small_icon(self):
        """Gets the uri_small_icon of this SportCategory.  # noqa: E501


        :return: The uri_small_icon of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._uri_small_icon

    @uri_small_icon.setter
    def uri_small_icon(self, uri_small_icon):
        """Sets the uri_small_icon of this SportCategory.


        :param uri_small_icon: The uri_small_icon of this SportCategory.  # noqa: E501
        :type: str
        """

        self._uri_small_icon = uri_small_icon

    @property
    def width_medium(self):
        """Gets the width_medium of this SportCategory.  # noqa: E501


        :return: The width_medium of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._width_medium

    @width_medium.setter
    def width_medium(self, width_medium):
        """Sets the width_medium of this SportCategory.


        :param width_medium: The width_medium of this SportCategory.  # noqa: E501
        :type: float
        """

        self._width_medium = width_medium

    @property
    def width_medium_icon(self):
        """Gets the width_medium_icon of this SportCategory.  # noqa: E501


        :return: The width_medium_icon of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._width_medium_icon

    @width_medium_icon.setter
    def width_medium_icon(self, width_medium_icon):
        """Sets the width_medium_icon of this SportCategory.


        :param width_medium_icon: The width_medium_icon of this SportCategory.  # noqa: E501
        :type: float
        """

        self._width_medium_icon = width_medium_icon

    @property
    def width_small(self):
        """Gets the width_small of this SportCategory.  # noqa: E501


        :return: The width_small of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._width_small

    @width_small.setter
    def width_small(self, width_small):
        """Sets the width_small of this SportCategory.


        :param width_small: The width_small of this SportCategory.  # noqa: E501
        :type: float
        """

        self._width_small = width_small

    @property
    def width_small_icon(self):
        """Gets the width_small_icon of this SportCategory.  # noqa: E501


        :return: The width_small_icon of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._width_small_icon

    @width_small_icon.setter
    def width_small_icon(self, width_small_icon):
        """Sets the width_small_icon of this SportCategory.


        :param width_small_icon: The width_small_icon of this SportCategory.  # noqa: E501
        :type: float
        """

        self._width_small_icon = width_small_icon

    @property
    def collection_type(self):
        """Gets the collection_type of this SportCategory.  # noqa: E501


        :return: The collection_type of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._collection_type

    @collection_type.setter
    def collection_type(self, collection_type):
        """Sets the collection_type of this SportCategory.


        :param collection_type: The collection_type of this SportCategory.  # noqa: E501
        :type: str
        """

        self._collection_type = collection_type

    @property
    def show_in_az(self):
        """Gets the show_in_az of this SportCategory.  # noqa: E501


        :return: The show_in_az of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._show_in_az

    @show_in_az.setter
    def show_in_az(self, show_in_az):
        """Sets the show_in_az of this SportCategory.


        :param show_in_az: The show_in_az of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._show_in_az = show_in_az

    @property
    def show_in_home(self):
        """Gets the show_in_home of this SportCategory.  # noqa: E501


        :return: The show_in_home of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._show_in_home

    @show_in_home.setter
    def show_in_home(self, show_in_home):
        """Sets the show_in_home of this SportCategory.


        :param show_in_home: The show_in_home of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._show_in_home = show_in_home

    @property
    def show_in_play(self):
        """Gets the show_in_play of this SportCategory.  # noqa: E501


        :return: The show_in_play of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._show_in_play

    @show_in_play.setter
    def show_in_play(self, show_in_play):
        """Sets the show_in_play of this SportCategory.


        :param show_in_play: The show_in_play of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._show_in_play = show_in_play

    @property
    def height_large(self):
        """Gets the height_large of this SportCategory.  # noqa: E501


        :return: The height_large of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._height_large

    @height_large.setter
    def height_large(self, height_large):
        """Sets the height_large of this SportCategory.


        :param height_large: The height_large of this SportCategory.  # noqa: E501
        :type: float
        """

        self._height_large = height_large

    @property
    def height_large_icon(self):
        """Gets the height_large_icon of this SportCategory.  # noqa: E501


        :return: The height_large_icon of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._height_large_icon

    @height_large_icon.setter
    def height_large_icon(self, height_large_icon):
        """Sets the height_large_icon of this SportCategory.


        :param height_large_icon: The height_large_icon of this SportCategory.  # noqa: E501
        :type: float
        """

        self._height_large_icon = height_large_icon

    @property
    def uri_large(self):
        """Gets the uri_large of this SportCategory.  # noqa: E501


        :return: The uri_large of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._uri_large

    @uri_large.setter
    def uri_large(self, uri_large):
        """Sets the uri_large of this SportCategory.


        :param uri_large: The uri_large of this SportCategory.  # noqa: E501
        :type: str
        """

        self._uri_large = uri_large

    @property
    def width_large(self):
        """Gets the width_large of this SportCategory.  # noqa: E501


        :return: The width_large of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._width_large

    @width_large.setter
    def width_large(self, width_large):
        """Sets the width_large of this SportCategory.


        :param width_large: The width_large of this SportCategory.  # noqa: E501
        :type: float
        """

        self._width_large = width_large

    @property
    def width_large_icon(self):
        """Gets the width_large_icon of this SportCategory.  # noqa: E501


        :return: The width_large_icon of this SportCategory.  # noqa: E501
        :rtype: float
        """
        return self._width_large_icon

    @width_large_icon.setter
    def width_large_icon(self, width_large_icon):
        """Sets the width_large_icon of this SportCategory.


        :param width_large_icon: The width_large_icon of this SportCategory.  # noqa: E501
        :type: float
        """

        self._width_large_icon = width_large_icon

    @property
    def score_board_url(self):
        """Gets the score_board_url of this SportCategory.  # noqa: E501


        :return: The score_board_url of this SportCategory.  # noqa: E501
        :rtype: str
        """
        return self._score_board_url

    @score_board_url.setter
    def score_board_url(self, score_board_url):
        """Sets the score_board_url of this SportCategory.


        :param score_board_url: The score_board_url of this SportCategory.  # noqa: E501
        :type: str
        """

        self._score_board_url = score_board_url

    @property
    def matches_tab_enabled(self):
        """Gets the matches_tab_enabled of this SportCategory.  # noqa: E501


        :return: The matches_tab_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._matches_tab_enabled

    @matches_tab_enabled.setter
    def matches_tab_enabled(self, matches_tab_enabled):
        """Sets the matches_tab_enabled of this SportCategory.


        :param matches_tab_enabled: The matches_tab_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._matches_tab_enabled = matches_tab_enabled

    @property
    def inplay_tab_enabled(self):
        """Gets the inplay_tab_enabled of this SportCategory.  # noqa: E501


        :return: The inplay_tab_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._inplay_tab_enabled

    @inplay_tab_enabled.setter
    def inplay_tab_enabled(self, inplay_tab_enabled):
        """Sets the inplay_tab_enabled of this SportCategory.


        :param inplay_tab_enabled: The inplay_tab_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._inplay_tab_enabled = inplay_tab_enabled

    @property
    def competition_tab_enabled(self):
        """Gets the competition_tab_enabled of this SportCategory.  # noqa: E501


        :return: The competition_tab_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._competition_tab_enabled

    @competition_tab_enabled.setter
    def competition_tab_enabled(self, competition_tab_enabled):
        """Sets the competition_tab_enabled of this SportCategory.


        :param competition_tab_enabled: The competition_tab_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._competition_tab_enabled = competition_tab_enabled

    @property
    def coupons_tab_enabled(self):
        """Gets the coupons_tab_enabled of this SportCategory.  # noqa: E501


        :return: The coupons_tab_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._coupons_tab_enabled

    @coupons_tab_enabled.setter
    def coupons_tab_enabled(self, coupons_tab_enabled):
        """Sets the coupons_tab_enabled of this SportCategory.


        :param coupons_tab_enabled: The coupons_tab_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._coupons_tab_enabled = coupons_tab_enabled

    @property
    def outrights_tab_enabled(self):
        """Gets the outrights_tab_enabled of this SportCategory.  # noqa: E501


        :return: The outrights_tab_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._outrights_tab_enabled

    @outrights_tab_enabled.setter
    def outrights_tab_enabled(self, outrights_tab_enabled):
        """Sets the outrights_tab_enabled of this SportCategory.


        :param outrights_tab_enabled: The outrights_tab_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._outrights_tab_enabled = outrights_tab_enabled

    @property
    def specials_tab_enabled(self):
        """Gets the specials_tab_enabled of this SportCategory.  # noqa: E501


        :return: The specials_tab_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._specials_tab_enabled

    @specials_tab_enabled.setter
    def specials_tab_enabled(self, specials_tab_enabled):
        """Sets the specials_tab_enabled of this SportCategory.


        :param specials_tab_enabled: The specials_tab_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._specials_tab_enabled = specials_tab_enabled

    @property
    def highlight_carousel_enabled(self):
        """Gets the highlight_carousel_enabled of this SportCategory.  # noqa: E501


        :return: The highlight_carousel_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._highlight_carousel_enabled

    @highlight_carousel_enabled.setter
    def highlight_carousel_enabled(self, highlight_carousel_enabled):
        """Sets the highlight_carousel_enabled of this SportCategory.


        :param highlight_carousel_enabled: The highlight_carousel_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._highlight_carousel_enabled = highlight_carousel_enabled

    @property
    def surface_bets_enabled(self):
        """Gets the surface_bets_enabled of this SportCategory.  # noqa: E501


        :return: The surface_bets_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._surface_bets_enabled

    @surface_bets_enabled.setter
    def surface_bets_enabled(self, surface_bets_enabled):
        """Sets the surface_bets_enabled of this SportCategory.


        :param surface_bets_enabled: The surface_bets_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._surface_bets_enabled = surface_bets_enabled

    @property
    def quick_link_enabled(self):
        """Gets the quick_link_enabled of this SportCategory.  # noqa: E501


        :return: The quick_link_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._quick_link_enabled

    @quick_link_enabled.setter
    def quick_link_enabled(self, quick_link_enabled):
        """Sets the quick_link_enabled of this SportCategory.


        :param quick_link_enabled: The quick_link_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._quick_link_enabled = quick_link_enabled

    @property
    def inplay_enabled(self):
        """Gets the inplay_enabled of this SportCategory.  # noqa: E501


        :return: The inplay_enabled of this SportCategory.  # noqa: E501
        :rtype: bool
        """
        return self._inplay_enabled

    @inplay_enabled.setter
    def inplay_enabled(self, inplay_enabled):
        """Sets the inplay_enabled of this SportCategory.


        :param inplay_enabled: The inplay_enabled of this SportCategory.  # noqa: E501
        :type: bool
        """

        self._inplay_enabled = inplay_enabled

    @property
    def inplay_sport_module(self):
        """Gets the inplay_sport_module of this SportCategory.  # noqa: E501


        :return: The inplay_sport_module of this SportCategory.  # noqa: E501
        :rtype: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsinplaySportModuleYamlInplaySportModule
        """
        return self._inplay_sport_module

    @inplay_sport_module.setter
    def inplay_sport_module(self, inplay_sport_module):
        """Sets the inplay_sport_module of this SportCategory.


        :param inplay_sport_module: The inplay_sport_module of this SportCategory.  # noqa: E501
        :type: UsersbmakarIdeaProjectsoxygenCmsApisrcmainresourcesstaticprivatecomponentsinplaySportModuleYamlInplaySportModule
        """

        self._inplay_sport_module = inplay_sport_module

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SportCategory, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SportCategory):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
