// base build v1.2
// https://bitbucket.org/symphonydevelopers/codebase-main/src/master/tools/gradle/build.gradle

// Limitations of the plugins DSL
// https://docs.gradle.org/5.2.1/userguide/plugins.html#plugins_dsl_limitations

plugins {
  id 'org.springframework.boot' version '2.7.1'
  id 'com.coral.tools' version '3.0-SNAPSHOT'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.ladbrokescoral.oxygen'



def nexusRepo = System.getenv('NEXUS_HOST') ?: 'https://nexus-vie.coral.co.uk/repository/maven-public/'
def nexusUser = project.properties.nexusUser ?: System.getenv('NEXUS_USER')
def nexusPass = project.properties.nexusPass ?: System.getenv('NEXUS_PASS')

repositories {
  maven {
    credentials {
      username = nexusUser
      password = nexusPass
    }
    url nexusRepo
  }
  jcenter()
}

configurations {
  all {
    // exclude module: 'joda-time'
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
}

ext {
  set('springCloudVersion', '2021.0.3')
}

dependencies {

  // Development
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  // Fortify Annotations manual https://drive.google.com/open?id=15SbZt-C937-CnBNs6-zIH-Wy8T_KAFNZ
  compileOnly 'com.hp.fortify:fortifyAnnotations:4.30'

  // Spring Cloud
  implementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  // implementation 'org.springframework.cloud:spring-cloud-starter-config'

  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter-logging'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  // Spring - Kafka
  implementation 'org.springframework.kafka:spring-kafka'

  // Project dependencies
  implementation 'com.newrelic.agent.java:newrelic-api:latest.release'

  // Web
  implementation 'com.corundumstudio.socketio:netty-socketio:1.7.18'
  implementation 'com.google.code.gson:gson:2.8.6' // FIXME: use jackson

  // Testing
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.socket:socket.io-client:1.0.0'

}

jacocoTestReport.reports.xml.enabled = true

test {
  systemProperty 'spring.profiles.active', 'UNIT'
  useJUnitPlatform()
}

springBoot {
  buildInfo()
}

bootBuildImage {
  imageName = "${rootProject.name}"
}
jar{
  enabled=false
}
