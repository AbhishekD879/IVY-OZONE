buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("net.saliman:gradle-cobertura-plugin:2.3.2")
    }
}

group 'com.egalacoral.spark'
version '1.1.6'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'pmd'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'eclipse'

jar {
    baseName = 'timeform-api'
    version = version
}

pmd {
    ruleSets = ["java-basic"]
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('io.reactivex:rxjava:1.1.8')
    compile('com.squareup.retrofit2:retrofit:2.1.0')
    compile('com.squareup.retrofit2:converter-gson:2.1.0')
    compile('joda-time:joda-time:2.9.4')
    compile('com.google.code.gson:gson:2.7')
    compile('com.squareup.okhttp3:logging-interceptor:3.4.1')
    compile('ch.qos.logback:logback-core:1.1.7')
    compile('ch.qos.logback:logback-classic:1.1.7')
    testCompile('org.hamcrest:hamcrest-all:1.3')
    testCompile('junit:junit:4.11')
    testCompile('org.mockito:mockito-all:1.9.5')
}

cobertura {
    coverageFormats = ['html']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']
    coverageReportDir = new File("$buildDir/reports/cobertura")
}

test.finalizedBy(project.tasks.cobertura)

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://npm-repo-coral.symphony-solutions.eu/repository/maven-snapshots/") {
                authentication(userName: "dev_team", password: "dev_team")
            }
            pom.version = "1.1.6-SNAPSHOT"
            pom.artifactId = "timeform-api"
            pom.groupId = "com.egalacoral.spark"
        }
    }
}
