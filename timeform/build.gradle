// base build v1.2
// https://bitbucket.org/symphonydevelopers/codebase-main/src/master/tools/gradle/build.gradle

// Limitations of the plugins DSL
// https://docs.gradle.org/5.2.1/userguide/plugins.html#plugins_dsl_limitations

plugins {
  id 'java'
  id 'jacoco'
  id 'application'

  id 'eclipse'
  id 'idea'

  id 'io.spring.dependency-management' version '1.0.7.RELEASE'
  id 'org.springframework.boot' version '1.5.10.RELEASE'
  id 'com.coral.tools' version "1.5-SNAPSHOT"
}

mainClassName = 'com.egalacoral.spark.timeform.Application'

allprojects {
  apply plugin: 'java'
  apply plugin: 'jacoco'

  apply plugin: 'eclipse'
  apply plugin: 'idea'

  apply plugin: 'com.coral.tools'

  group = 'com.egalacoral.spark'
  sourceCompatibility = 1.8

  def nexusMavenRepo = 'https://nexus-vie.coral.co.uk/repository/maven-public/'
  ext.nexusUser = project.properties.nexusUser ?: System.getenv('NEXUS_USER')
  ext.nexusPass = project.properties.nexusPass ?: System.getenv('NEXUS_PASS')

  repositories {
    jcenter()
    maven {
      credentials {
        username = "${nexusUser}"
        password = "${nexusPass}"
      }
      url nexusMavenRepo
    }
  }
}
sonarqube {
  properties {
    property 'sonar.coverage.exclusions', "**/com/egalacoral/spark/timeform/configuration/**"
  }
}
dependencies {
  // fixme:  change configurations 'compile' to 'implementation' after upgrading SpringBoot to v2

  // Fortify Annotations manual https://drive.google.com/open?id=15SbZt-C937-CnBNs6-zIH-Wy8T_KAFNZ
  compileOnly 'com.hp.fortify:fortifyAnnotations:4.30'

  // Spring
  compile 'org.springframework.boot:spring-boot-starter-cache'
  compile 'org.springframework.boot:spring-boot-starter-actuator'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-undertow'
  compile 'org.springframework.boot:spring-boot-starter-security'

  // Project dependencies
  compile project(':timeform-api')
  compile project(':siteserver-api')
  compile 'com.newrelic.agent.java:newrelic-api:3.38.0'

  // Web
  compile 'io.springfox:springfox-swagger2:2.5.0'
  compile 'io.springfox:springfox-swagger-ui:2.5.0'

  // Other
  compile 'javax.mail:mail:1.4.7'
  compile 'net.jazdw:rql-parser:0.3.1'
  compile 'fm.void.jetm:jetm:1.2.3'
  compile 'org.aspectj:aspectjweaver:1.8.9'
  compile 'org.quartz-scheduler:quartz:2.2.3'
  compile 'org.openjdk.jol:jol-core:0.8'
  compile 'com.github.ben-manes.caffeine:caffeine'
  compile 'org.reflections:reflections:0.9.11'
  compile 'org.redisson:redisson:3.6.0'
  compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.177'
  compile 'com.github.derjust:spring-data-dynamodb:4.5.0'
  compile 'javax.xml.bind:jaxb-api:2.3.0'
  compile 'org.slf4j:slf4j-api:1.7.30'

  // Utils
  compile 'org.apache.velocity:velocity:1.7'
  compile 'org.apache.commons:commons-csv:1.2'
  compile 'commons-io:commons-io:2.5'
  compile 'joda-time:joda-time'
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda'

  // Testing
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
  compile.exclude module: 'spring-boot-starter-tomcat'
}

test.dependsOn(subprojects.test)

processResources {
  println project.properties
  filesMatching('application.properties') {
    expand(project.properties)
  }
}

run {
  systemProperties = System.properties
  if (System.getProperty('DEBUG', 'false') == 'true') {
    jvmArgs '-Xdebug',
        '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9009'
  }
}
