plugins {

  id "org.springframework.boot" version "2.7.1"
  id "com.coral.tools" version "3.0-SNAPSHOT"
}

apply plugin: "io.spring.dependency-management"

group = "com.ladbrokescoral.oxygen.timeline"
version = "107.0.0"


def nexusPublic = System.getenv("NEXUS_HOST") ?: "https://nexus-vie.coral.co.uk/repository/maven-public/"
ext.nexusUser = System.getenv("NEXUS_USER") ?: project.properties.nexusUser
ext.nexusPass = System.getenv("NEXUS_PASS") ?: project.properties.nexusPass

repositories {
  maven {
    credentials {
      username = "${nexusUser}"
      password = "${nexusPass}"
    }
    url nexusPublic
  }
  mavenCentral()
}

configurations {
  all {
    // exclude module: 'spring-boot-starter-tomcat'
    // exclude module: 'spring-boot-starter-logging'
    // exclude module: 'joda-time'
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
}
sonarqube {

  properties {

    property 'sonar.coverage.exclusions', "**/com/ladbrokescoral/oxygen/timeline/api/service/impl/**"
    property 'sonar.coverage.exclusions', "**/com/ladbrokescoral/oxygen/timeline/api/model/message/**"
  }
}
dependencies {

  // Development
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  // SpringBoot

  // Spring
  implementation 'org.springframework.kafka:spring-kafka'
  implementation 'io.projectreactor.kafka:reactor-kafka'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  //reactive -ws
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  implementation 'io.projectreactor:reactor-core:3.4.24'

  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.3'


  // FIXME: clean up
  implementation("com.newrelic.agent.java:newrelic-api:latest.release")
  implementation("io.springfox:springfox-swagger2:2.9.2") // use springdoc
  implementation("io.springfox:springfox-swagger-ui:2.9.2") // use springdoc
  implementation("io.vavr:vavr:0.10.2")
  implementation("org.modelmapper:modelmapper:2.3.5")
  implementation("org.apache.commons:commons-text:1.8")
  implementation('com.egalacoral.spark:siteserver-api:release-154.0.0-jdk-17')
  implementation('com.egalacoral.spark:liveserv-api:1.7') {
    changing = true
    exclude(module: 'siteserver-api')
  }
  testImplementation 'io.projectreactor:reactor-test:3.4.19'

  // Testing
  testImplementation "org.springframework.kafka:spring-kafka-test"

  // FIXME: cleanup and fix cucumber output folder
  testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '7.2.3' // todo use ()
  testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '7.2.3'
  testImplementation group: 'io.cucumber', name: 'cucumber-spring', version: '7.2.3'
  testImplementation(group: 'io.socket', name: 'socket.io-client', version: '1.0.0')
  //testCompile group: 'io.cucumber', name: 'cucumber-reporting', version: '5.7.0'
  testImplementation("org.springframework.boot:spring-boot-starter-test") {
    exclude group: "org.junit.vintage", module: "junit-vintage-engine"
  }
}

jacocoTestReport.reports.xml.enabled = true

// FIXME: rework UNIT/test profile usage
// test {
//   systemProperty 'spring.profiles.active', 'UNIT'
// }

springBoot {
  buildInfo()
}

bootBuildImage {
  imageName = "${rootProject.name}"
}

jar{
  enabled=false
}
